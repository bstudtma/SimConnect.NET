<Project>
  <PropertyGroup>
  <Version>0.1.9-beta</Version>
    <Authors>BARS</Authors>
    <Company>BARS</Company>
    <Product>SimConnect.NET</Product>
    <Description>A managed C# wrapper for Microsoft Flight Simulator's SimConnect SDK, providing async/await patterns and high-level abstractions for flight simulation data access.</Description>
    <Copyright>Copyright (c) BARS. All rights reserved.</Copyright>
    <RepositoryUrl>https://github.com/stopbars/SimConnect.NET</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageProjectUrl>https://github.com/stopbars/SimConnect.NET</PackageProjectUrl>
    <PackageReadmeFile>README.nuget.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>flight-simulator;simconnect;msfs;flight-sim;aviation;simulation</PackageTags>
    <PackageReleaseNotes>See CHANGELOG.md for details.</PackageReleaseNotes>
    <PackageIcon Condition="Exists('$(MSBuildThisFileDirectory)logo.png')">logo.png</PackageIcon>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Deterministic>true</Deterministic>
    <ContinuousIntegrationBuild Condition="'$(CI)' == 'true'">true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <PropertyGroup>
    <SignAssembly>false</SignAssembly>
    <DelaySign>false</DelaySign>
    <PublicSign>false</PublicSign>
  </PropertyGroup>

  <ItemGroup>
    <None Include="$(MSBuildThisFileDirectory)README.nuget.md" Pack="true" PackagePath="\" />
    <None Include="$(MSBuildThisFileDirectory)LICENCE" Pack="true" PackagePath="\" />
    <None Include="$(MSBuildThisFileDirectory)CHANGELOG.md" Pack="true" PackagePath="\" />
    <None Include="$(MSBuildThisFileDirectory)SECURITY.md" Pack="true" PackagePath="\" />
    <None Include="$(MSBuildThisFileDirectory)logo.png" Pack="true" PackagePath="\" Condition="Exists('$(MSBuildThisFileDirectory)logo.png')" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.435" PrivateAssets="all" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup Condition="'$(ContinuousIntegrationBuild)' == 'true'">
    <SourceRoot Include="$(MSBuildThisFileDirectory)/" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" Link="stylecop.json" />
  </ItemGroup>

  <Target Name="DerivePackageReleaseNotes" BeforeTargets="GenerateNuspec">
    <PropertyGroup>
      <_ChangelogPath>$(MSBuildThisFileDirectory)CHANGELOG.md</_ChangelogPath>
    </PropertyGroup>
    <PropertyGroup Condition="Exists('$(_ChangelogPath)')">
      <_ChangelogContent>$([System.IO.File]::ReadAllText('$(_ChangelogPath)'))</_ChangelogContent>
      <_EscapedVersion>$([System.Text.RegularExpressions.Regex]::Escape('$(Version)'))</_EscapedVersion>
      <_Pattern>## \[$(_EscapedVersion)\][^\n\r]*\r?\n(?&lt;body&gt;.*?)(\r?\n## \[|$)</_Pattern>
      <_Body>$([System.Text.RegularExpressions.Regex]::Match($(_ChangelogContent), $(_Pattern), System.Text.RegularExpressions.RegexOptions.Singleline).Groups['body'].Value)</_Body>
      <_Body>$(_Body.Trim())</_Body>
    </PropertyGroup>
    <PropertyGroup Condition="'$(_Body)' != ''">
      <PackageReleaseNotes>$(_Body)</PackageReleaseNotes>
    </PropertyGroup>
    <Message Importance="High" Text="[DerivePackageReleaseNotes] Release notes resolved: $([System.String]::Copy('$(PackageReleaseNotes)'))" />
  </Target>
</Project>
